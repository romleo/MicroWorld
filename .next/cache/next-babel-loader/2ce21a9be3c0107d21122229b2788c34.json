{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import Document, { Head, Main, NextScript } from 'next/document'\n// import { ServerStyleSheet } from 'styled-components'\n// import 'styles/global-styles'\n// export default class SiteDocument extends Document {\n//   render () {\n//     const sheet = new ServerStyleSheet()\n//     const main = <Main />\n//     // const main = sheet.collectStyles(<Main />)\n//     // const styleTags = sheet.getStyleElement()\n//     return (\n//       <html>\n//         <Head>\n//           <meta charSet='utf-8' />\n//           <meta name='viewport' content='initial-scale=1.0, width=device-width' />\n//           <link rel='stylesheet' type='text/css' href='https://cdnjs.cloudflare.com/ajax/libs/sanitize.css/2.0.0/sanitize.min.css' />\n//           <link rel='stylesheet' type='text/css' href='https://cdnjs.cloudflare.com/ajax/libs/tachyons/4.7.4/tachyons.min.css' />\n//           {/* {styleTags} */}\n//         </Head>\n//         <body>\n//           <div className='root'>\n//             {main}\n//           </div>\n//           <NextScript />\n//         </body>\n//       </html>\n//     )\n//   }\n// }\nimport Document from 'next/document';\nimport { ServerStyleSheet } from 'styled-components';\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => sheet.collectStyles(__jsx(App, props))\n      });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread({}, initialProps, {\n        styles: __jsx(React.Fragment, null, initialProps.styles, sheet.getStyleElement())\n      });\n    } finally {\n      sheet.seal();\n    }\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}